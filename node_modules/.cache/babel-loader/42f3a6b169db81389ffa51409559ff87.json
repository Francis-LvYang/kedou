{"ast":null,"code":"import \"antd-mobile/lib/tab-bar/style/css\";\nimport _TabBar from \"antd-mobile/lib/tab-bar\";\n\nvar _class,\n    _jsxFileName = \"/Users/Ryan/Projects/kedou/src/components/TabBer/index.js\";\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nlet TabBarExample = withRouter(_class = class TabBarExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: '1',\n      hidden: false,\n      fullScreen: true\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let url = this.props.location.pathname;\n    let showNav = /^(\\/video|\\/book)$/.test(url);\n    return React.createElement(React.Fragment, null, showNav && React.createElement(\"div\", {\n      className: \"TabBer\",\n      style: this.state.fullScreen ? {\n        position: 'fixed',\n        bottom: '0',\n        width: '100%',\n        zIndex: '10001'\n      } : {\n        height: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(_TabBar, {\n      unselectedTintColor: \"#949494\",\n      tintColor: \"#33A3F4\",\n      barTintColor: \"white\",\n      hidden: this.state.hidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(_TabBar.Item, {\n      icon: {\n        uri: require('../../assets/images/video_nomal.png')\n      },\n      selectedIcon: {\n        uri: require('../../assets/images/video_pressed.png')\n      },\n      title: \"\\u89C6\\u9891\",\n      key: \"\\u89C6\\u9891\",\n      selected: url === '/video' ? true : false,\n      onPress: () => {\n        if (url !== '/video') {\n          this.props.history.push('/video');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(_TabBar.Item, {\n      icon: {\n        uri: require('../../assets/images/book_nomal.png')\n      },\n      selectedIcon: {\n        uri: require('../../assets/images/book_pressed.png')\n      },\n      title: \"\\u542C\\u4E66\",\n      key: \"\\u542C\\u4E66\",\n      selected: url === '/book' ? true : false,\n      onPress: () => {\n        if (url !== '/book') {\n          this.props.history.push('/book');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n\n}) || _class;\n\nexport default TabBarExample;","map":{"version":3,"sources":["/Users/Ryan/Projects/kedou/src/components/TabBer/index.js"],"names":["React","withRouter","TabBarExample","Component","constructor","props","state","selectedTab","hidden","fullScreen","componentDidMount","render","url","location","pathname","showNav","test","position","bottom","width","zIndex","height","uri","require","history","push"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEMC,a,GADLD,U,UAAD,MACMC,aADN,SAC4BF,KAAK,CAACG,SADlC,CAC4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,GADF;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG,CACnB;;AAGDC,EAAAA,MAAM,GAAG;AACP,QAAIC,GAAG,GAAG,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,QAA9B;AACA,QAAIC,OAAO,GAAG,qBAAqBC,IAArB,CAA0BJ,GAA1B,CAAd;AAEA,WAAO,0CACJG,OAAO,IAAI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,UAAX,GAAwB;AAAEQ,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,MAAM,EAAE,GAA7B;AAAkCC,QAAAA,KAAK,EAAE,MAAzC;AAAiDC,QAAAA,MAAM,EAAE;AAAzD,OAAxB,GAA6F;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACV;AACE,MAAA,mBAAmB,EAAC,SADtB;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,YAAY,EAAC,OAHf;AAIE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWE,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,4BAAQ,IAAR;AACE,MAAA,IAAI,EAAE;AAAEc,QAAAA,GAAG,EAAEC,OAAO,CAAC,qCAAD;AAAd,OADR;AAEE,MAAA,YAAY,EAAE;AAAED,QAAAA,GAAG,EAAEC,OAAO,CAAC,uCAAD;AAAd,OAFhB;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,GAAG,EAAC,cAJN;AAKE,MAAA,QAAQ,EAAEX,GAAG,KAAK,QAAR,GAAmB,IAAnB,GAA0B,KALtC;AAME,MAAA,OAAO,EAAE,MAAM;AACb,YAAIA,GAAG,KAAK,QAAZ,EAAsB;AACpB,eAAKP,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAkBE,4BAAQ,IAAR;AACE,MAAA,IAAI,EAAE;AAAEH,QAAAA,GAAG,EAAEC,OAAO,CAAC,oCAAD;AAAd,OADR;AAEE,MAAA,YAAY,EAAE;AAAED,QAAAA,GAAG,EAAEC,OAAO,CAAC,sCAAD;AAAd,OAFhB;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,GAAG,EAAC,cAJN;AAKE,MAAA,QAAQ,EAAEX,GAAG,KAAK,OAAR,GAAkB,IAAlB,GAAyB,KALrC;AAME,MAAA,OAAO,EAAE,MAAM;AACb,YAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnB,eAAKP,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;AACF,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADU,CADP,CAAP;AAoCD;;AArDyC,C;;AAuD5C,eAAevB,aAAf","sourcesContent":["import { TabBar } from 'antd-mobile';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n@withRouter\nclass TabBarExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: '1',\n      hidden: false,\n      fullScreen: true,\n    };\n  }\n  componentDidMount() {\n  }\n\n\n  render() {\n    let url = this.props.location.pathname\n    let showNav = /^(\\/video|\\/book)$/.test(url)\n\n    return <>\n      {showNav && <div className='TabBer' style={this.state.fullScreen ? { position: 'fixed', bottom: '0', width: '100%', zIndex: '10001' } : { height: 400 }}>\n        <TabBar\n          unselectedTintColor=\"#949494\"\n          tintColor=\"#33A3F4\"\n          barTintColor=\"white\"\n          hidden={this.state.hidden}\n        >\n          <TabBar.Item\n            icon={{ uri: require('../../assets/images/video_nomal.png') }}\n            selectedIcon={{ uri: require('../../assets/images/video_pressed.png') }}\n            title=\"视频\"\n            key=\"视频\"\n            selected={url === '/video' ? true : false}\n            onPress={() => {\n              if (url !== '/video') {\n                this.props.history.push('/video')\n              }\n            }}\n          />\n          <TabBar.Item\n            icon={{ uri: require('../../assets/images/book_nomal.png') }}\n            selectedIcon={{ uri: require('../../assets/images/book_pressed.png') }}\n            title=\"听书\"\n            key=\"听书\"\n            selected={url === '/book' ? true : false}\n            onPress={() => {\n              if (url !== '/book') {\n                this.props.history.push('/book')\n              }\n            }}\n          />\n        </TabBar>\n      </div>\n      }\n    </>\n  }\n}\nexport default TabBarExample\n"]},"metadata":{},"sourceType":"module"}