{"ast":null,"code":"import _extends from \"/Users/gaomengzhou/Projects/kedou/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/Users/gaomengzhou/Projects/kedou/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as video from '../../services/video';\nimport * as actionType from '../actionType';\nexport const getHomeVideoList = ({\n  rows\n}) => dispatch => {\n  return video.getHomeVideoList({\n    rows\n  }).then(res => {\n    const newVideoList = res.new;\n    const hotVideoList = res.most;\n    dispatch({\n      type: actionType.HOME_LIST,\n      newVideoList,\n      hotVideoList\n    });\n  });\n};\nexport const getHomeLabelList = ({\n  type\n}) => dispatch => {\n  return video.getHomeLabelList({\n    type\n  }).then(res => {\n    const recommend = [];\n    const hotLabel = [];\n    res = [_objectSpread({\n      title: '全部影片',\n      key: '全部影片'\n    }, res), _objectSpread({\n      title: '最新片源',\n      key: '最新片源'\n    }, res), _objectSpread({\n      title: '重磅热播',\n      key: '重磅热播'\n    }, res)].concat(res.map(e => {\n      return _objectSpread({\n        title: e.class_name,\n        key: e.class_name\n      }, e);\n    }));\n    res.forEach(e => {\n      if (e.category === 3) {\n        recommend.push(e);\n      } else if (e.category === 1 && e.type !== 1) {\n        if (hotLabel.length < 6) {\n          hotLabel.push(e);\n        }\n      }\n    });\n    dispatch({\n      type: actionType.LABEL_LIST,\n      labelList: res,\n      recommend,\n      hotLabel\n    });\n  });\n};\nexport const getLabelTabList = (_ref) => {\n  let parameter = _extends({}, _ref);\n\n  return dispatch => {\n    return video.getLabelTabList(_objectSpread({}, parameter)).then(res => {\n      //console.log(res);\n      dispatch({\n        type: actionType.LABEL_TAB_LIST,\n        labelTabList: res\n      });\n    });\n  };\n};\nexport const search_video = (_ref2) => {\n  let parameter = _extends({}, _ref2);\n\n  return dispatch => {\n    return video.search_video(_objectSpread({}, parameter)).then(res => {\n      dispatch({\n        type: actionType.TAB_LIST,\n        tabList: res\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gaomengzhou/Projects/kedou/src/store/action/video.js"],"names":["video","actionType","getHomeVideoList","rows","dispatch","then","res","newVideoList","new","hotVideoList","most","type","HOME_LIST","getHomeLabelList","recommend","hotLabel","title","key","concat","map","e","class_name","forEach","category","push","length","LABEL_LIST","labelList","getLabelTabList","parameter","LABEL_TAB_LIST","labelTabList","search_video","TAB_LIST","tabList"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC7BC,EAAAA;AAD6B,CAAD,KAEzBC,QAAD,IAAc;AAChB,SAAOJ,KAAK,CAACE,gBAAN,CAAuB;AAC1BC,IAAAA;AAD0B,GAAvB,EAEJE,IAFI,CAECC,GAAG,IAAI;AACX,UAAMC,YAAY,GAACD,GAAG,CAACE,GAAvB;AACA,UAAMC,YAAY,GAACH,GAAG,CAACI,IAAvB;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,UAAU,CAACW,SADZ;AAELL,MAAAA,YAFK;AAGLE,MAAAA;AAHK,KAAD,CAAR;AAKH,GAVM,CAAP;AAWH,CAdM;AAeP,OAAO,MAAMI,gBAAgB,GAAG,CAAC;AAC7BF,EAAAA;AAD6B,CAAD,KAEzBP,QAAD,IAAc;AAChB,SAAOJ,KAAK,CAACa,gBAAN,CAAuB;AAC1BF,IAAAA;AAD0B,GAAvB,EAEJN,IAFI,CAECC,GAAG,IAAI;AACX,UAAMQ,SAAS,GAAC,EAAhB;AACA,UAAMC,QAAQ,GAAC,EAAf;AACAT,IAAAA,GAAG,GAAG;AACFU,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,GAAG,EAAC;AAFF,OAGCX,GAHD;AAKFU,MAAAA,KAAK,EAAE,MALL;AAMFC,MAAAA,GAAG,EAAC;AANF,OAOCX,GAPD;AASFU,MAAAA,KAAK,EAAE,MATL;AAUFC,MAAAA,GAAG,EAAC;AAVF,OAWCX,GAXD,GAYHY,MAZG,CAYIZ,GAAG,CAACa,GAAJ,CAAQC,CAAC,IAAI;AACnB;AACIJ,QAAAA,KAAK,EAAEI,CAAC,CAACC,UADb;AAEIJ,QAAAA,GAAG,EAACG,CAAC,CAACC;AAFV,SAGOD,CAHP;AAKH,KANS,CAZJ,CAAN;AAmBAd,IAAAA,GAAG,CAACgB,OAAJ,CAAYF,CAAC,IAAI;AACb,UAAGA,CAAC,CAACG,QAAF,KAAa,CAAhB,EAAkB;AACdT,QAAAA,SAAS,CAACU,IAAV,CAAeJ,CAAf;AACH,OAFD,MAEM,IAAGA,CAAC,CAACG,QAAF,KAAa,CAAb,IAAgBH,CAAC,CAACT,IAAF,KAAS,CAA5B,EAA8B;AAChC,YAAGI,QAAQ,CAACU,MAAT,GAAgB,CAAnB,EAAqB;AACjBV,UAAAA,QAAQ,CAACS,IAAT,CAAcJ,CAAd;AACH;AACJ;AACJ,KARD;AASAhB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,UAAU,CAACyB,UADZ;AAELC,MAAAA,SAAS,EAAErB,GAFN;AAGLQ,MAAAA,SAHK;AAILC,MAAAA;AAJK,KAAD,CAAR;AAOH,GAxCM,CAAP;AAyCH,CA5CM;AA6CP,OAAO,MAAMa,eAAe,GAAC;AAAA,MACtBC,SADsB;;AAAA,SAExBzB,QAAD,IAAY;AACZ,WAAOJ,KAAK,CAAC4B,eAAN,mBACAC,SADA,GAEJxB,IAFI,CAECC,GAAG,IAAE;AACT;AACAF,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACV,UAAU,CAAC6B,cADX;AAELC,QAAAA,YAAY,EAACzB;AAFR,OAAD,CAAR;AAIH,KARM,CAAP;AASH,GAZ4B;AAAA,CAAtB;AAaP,OAAO,MAAM0B,YAAY,GAAC;AAAA,MACnBH,SADmB;;AAAA,SAErBzB,QAAD,IAAY;AACZ,WAAOJ,KAAK,CAACgC,YAAN,mBACAH,SADA,GAEJxB,IAFI,CAECC,GAAG,IAAE;AACTF,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACV,UAAU,CAACgC,QADX;AAELC,QAAAA,OAAO,EAAC5B;AAFH,OAAD,CAAR;AAKH,KARM,CAAP;AASH,GAZyB;AAAA,CAAnB","sourcesContent":["import * as video from '../../services/video'\nimport * as actionType from '../actionType'\nexport const getHomeVideoList = ({\n    rows,\n}) => (dispatch) => {\n    return video.getHomeVideoList({\n        rows\n    }).then(res => {\n        const newVideoList=res.new\n        const hotVideoList=res.most\n        dispatch({\n            type: actionType.HOME_LIST,\n            newVideoList,\n            hotVideoList,\n        })\n    })\n}\nexport const getHomeLabelList = ({\n    type,\n}) => (dispatch) => {\n    return video.getHomeLabelList({\n        type\n    }).then(res => {\n        const recommend=[]\n        const hotLabel=[]\n        res = [{\n            title: '全部影片',\n            key:'全部影片',\n            ...res\n        },{\n            title: '最新片源',\n            key:'最新片源',\n            ...res\n        },{\n            title: '重磅热播',\n            key:'重磅热播',\n            ...res\n        }].concat(res.map(e => {\n            return {\n                title: e.class_name,\n                key:e.class_name,\n                ...e\n            }\n        }))\n        res.forEach(e => {\n            if(e.category===3){\n                recommend.push(e)\n            }else if(e.category===1&&e.type!==1){\n                if(hotLabel.length<6){\n                    hotLabel.push(e)\n                }\n            }\n        });\n        dispatch({\n            type: actionType.LABEL_LIST,\n            labelList: res,\n            recommend,\n            hotLabel\n        })\n\n    })\n}\nexport const getLabelTabList=({\n    ...parameter\n})=>(dispatch)=>{\n    return video.getLabelTabList({\n        ...parameter\n    }).then(res=>{\n        //console.log(res);\n        dispatch({\n            type:actionType.LABEL_TAB_LIST,\n            labelTabList:res\n        })\n    })\n}\nexport const search_video=({\n    ...parameter\n})=>(dispatch)=>{\n    return video.search_video({\n        ...parameter\n    }).then(res=>{\n        dispatch({\n            type:actionType.TAB_LIST,\n            tabList:res\n        })\n\n    })\n}\n"]},"metadata":{},"sourceType":"module"}